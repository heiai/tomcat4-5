1.servlet中手动关闭输出流 PrintWriter out = response.getWriter();out.close();
 系统会调用HttpResponseBase.doFlushBuffer()
 1.先调用HttpResponseBase。sendHeaders()方法将请求头写到流中
 2.让后调用父类的ResponseBase。flushBuffer()方法，将响应写到socket输出流中
  output.write(buffer, 0, bufferCount);
  
  
  
  
2。servlet执行完毕后，系统调用HttpResponseBase。finishResponse()方法
	先调用HttpResponseBase。sendHeaders()方法将请求头写到流中
	然后调用ResponseBase.finishResponse()方法，如同在servlet中手动关闭输出流
	


客户端何时停止接收消息
1.响应头指定了Content-Length,收到了指定大小的数据流
2.服务器端调用socket.close()关闭了链接	
	
	
	
\r是回车，英文是Carriage return，作用：使光标到行首

\n是换行，英文是New line/line feed，作用：使光标下移一行